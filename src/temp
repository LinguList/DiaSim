	
		//auxiliary for compareRuleCorrespondences, 
			// recruits proposedChs to disambiguate if a relocdation is forward or backward 
		//recall : indices in proposedChs[][0] are always the current (at point of operation) index in hypCASC -- so hi is used not bi
		private boolean relocdIsForward(int hi, int ilbi, int ilhi)
		{
			int candBackSrc = ilbi + 1 , candForwDest = ilhi - 1; 
			
			int pci = 0, lenpc = proposedChs.size(); 
			boolean reached = false; 
			while (!reached)
			{
				assert pci < lenpc : "ERROR: reached of end of proposedChanges without finding current target of operation."; 
				int curhi = Integer.parseInt(proposedChs.get(pci)[0]); 
				assert curhi <= hi : "ERROR: could not find current target of operation in proposedChanges!";
				reached = (curhi == hi); 
				pci ++; 
			}
			
			String[] thisOp = proposedChs.get(pci - 1); 
			
			// if thisOp is a deletion:	then the next proposedCh could also have [0] = hi,
				// and that could instead be the op we are interested in, will need to disambiguate. 
			// otherwise -- we can end this here and now iff the next rule is not a deletion of the exact same spot, [hi]
			// either way we can end it immediately if the next rule's [0] is not == hi. 
			
			//security first. 
			assert pci < lenpc : "ERROR: reached end of proposedChanges without finding later index of relocdation operation.";
			
			if ( proposedChs.get(pci)[0].equals(""+hi) )	return thisOp[1].equalsIgnoreCase("deletion"); 
			
			
			
			----
			//TODO abrogated below.
			List<String[]> opsHere = new ArrayList<String[]>(); 
			opsHere.add(proposedChs.get(pci-1)); 
			
			boolean passed = false; 
			while (!passed)
			{
				assert pci < lenpc : "ERROR: reached end of proposedChanges without finding later index of relocdation operation.";
				if( proposedChs.get(pci)[0].equals(""+hi) )	opsHere.add(proposedChs.get(pci++));
				else	passed = true; 
			}
			
			
			// ... otherwise we have to hunt down the corresponding op of the relocdation... 
			
			boolean reached = false; 
			while (!reached) 
			{
				assert pci < lenpc : "ERROR: reached end of proposedChanges without finding later index of relocdation operation.";
			
			}
			
			
			
		
		}
	
		
		
---
		
		//now we'll test et 7, heighten, which should be changed. 
		
		//TODO continue lexical effect testing 
		
//TODO this. 




---

		 
TODO - jargon file. 

instant -- spots between rules

---

